Today's Plan:
-------------
1)Ip adressing and subnetting
2)Overview of VPC,Subnets 

1)Ip adressing and subnetting:
------------------------------
Ipv4 -> 32 bit
Ipv6 -> 128 bit

Ip address range ->0.0.0.0 to 255.255.255.255
IP address classes:- https://www.guru99.com/ip-address-classes.html
127.x.x.x -> Loop back address

RFC-1918:
https://www.ucl.ac.uk/isd/services/get-connected/wired-networks/use-private-rfc1918-address-space-ucl-internal-network

10.0.0.0 (255.0.0.0 =10.0.0.0/8) (10 is constant)
10.0.0.0 (255.255.0.0 =10.0.0.0/16) (10.0 is constant)
10.0.0.0 (255.255.255.0 =10.0.0.0/24) (10.0.0 is constant)
https://www.subnet-calculator.com/

VPC:
----
uses  1) Resolves security issues
      2) Resolves IP adresses conflicts
      
      ----------------------------------------------------------CLASS-1&2 END -----------------------------------------------------------------------------
Today's Plan:
------------
1)creating a VPC
2)creating subnets and internet gateway
3)creating routing tables
4)adding the routes
5)creating security groups
6)creating a key pair
7)Deploying ec2-server 
8)connecting to ec2-server
9)Install nginx webserver

-->One VPC has attached with one IGW only. 
-->VPC has multiple route tables.
-->The Route table Main=yes means even if we dont add subnets under subnet association the default route will apply to that subnet which is newly created.

#!/bin/bash
yum update -y
amazon-linux-extras install nginx1.12 -y
service nginx start 
systemctl enable nginx
echo "<h1>$(cat /etc/hostname)</h1>" >> /usr/share/nginx/html/index.html
/var/www/html/index.nginx-debian.html
--------------------------------------------------------------CLASS-3 END---------------------------------------------------------------------------------
Today's Plan:
------------
1)public IP vs private IP
2)public and private subnets
3)How to provide internet access to the servers in private subnet using NAT gateway

-> The subnets which have routing to IGW called public subnets.
-> The subnets which does not have routing to the IGW called private subnets.
-> NAT gateway needs one public subnet and one elastic IP.
-----------------------------------------------------------CLASS-4 END-------------------------------------------------------------------------------------
Today's Plan:
------------
1)Deploying a windows machine
2)Installing active directory in windows machine.
3)VPC flowlogs - can be saved to S3 or AWS cloudwatch logs.

--> We can enable flowlogs at three levels  1)VPC level
                                            2)subnet level
                                            3)instance level (elastic network interface level)
                                            

#ec2-metadata
-------------------------------------------------------CLASS-5 END-----------------------------------------------------------------------------------------
Today's Plan:
------------
1)AWS CLI and CLOUD SHELL

ctrl + l --> clear the screen

-> install aws cli
# aws configure
# aws ec2 describe-vpcs  -> To list the vpcs
# aws ec2 describe-vpcs --output=json
# yum install jq  (jq is json processor)
# aws ec2 describe-vpcs | jq

[ec2-user@ip-10-35-1-119 ~]$ aws ec2 describe-vpcs | jq ".Vpcs[].VpcId"   (To list only vpc ids)
"vpc-0af75ec9f5d38ecec"
"vpc-091b81131e4315ae8"

[ec2-user@ip-10-35-1-119 ~]$ aws ec2 describe-vpcs | jq ".Vpcs[].VpcId" | tr -d '"'
vpc-0af75ec9f5d38ecec
vpc-091b81131e4315ae8

[ec2-user@ip-10-35-1-119 ~]$ aws ec2 describe-vpcs | jq ".Vpcs[].VpcId" | tr -d '"' | tr -d 'vpc'
-0af75e9f5d38ee
-091b81131e4315ae8

# aws ec2 describe-vpcs --output=text
# aws ec2 describe-vpcs --output=table

[ec2-user@ip-10-35-1-119 .aws]$ cat credentials 
[default]
aws_access_key_id = AKIARXHRZZT3Z7435XGL
aws_secret_access_key = 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

[s3]
aws_access_key_id = AKIARXHRZZT3Z7435YTR
aws_secret_access_key = 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

# aws s3 ls --profile=s3  (now it uses the credentials in above [s3])

# curl http://169.254.169.254/latest  --> To get details about the server

----------------------------------------------------------------------------CLASS-6 END--------------------------------------------------------------------
Today's Plan:
------------
1)VPC Peering

-->By default there is no communication between two VPCs
Two main rules for VPC peering:
------------------------------
--> Two vpcs must have different CIDR blocks
--> VPC peering do not support transit

------------------------------------------------------------------------CLASS-7 END------------------------------------------------------------------------
Today's Plan:
------------
1)VPC endpoints  --> 2types
                        1)Gateway endpoints ->Used for S3 and dynamo db
                        2)Interface endpoints ->Used for all other services
                        

VPC endpointd are region specific.
->VPC endpoints will allow the servers inside the VPC to communicate with other AWS services internally without going over the internet.
->Gateway endpoints added the route in the routing table it will be very faster.
->Interface endpoint creates a interface on the corresponding subnet.

-----------------------------------------------------------------------CLASS-8 END-------------------------------------------------------------------------
Today's Plan:
------------
1)security groups ->are statefull firewalls
2)NACL ->are stateless firewalls
-->We can assign up to 5 Security groups for a server.
-->We can copy the security groups from one VPC to another.

->we can't deny traffic in SG.
->SG applicable for EC2, RDS, EB, ALB except subnets.

-->NACL applicable for subnet only.
-->in NACL we have allow and deny the traffic

general trouble shooting steps:
------------------------------
1)check am i able to ssh/rdp to the server.
2)check the application service running state.
3)check any OS level firewall like ufw(for ubuntu) and windiows firewall and try to reach localhost on the browser.
4)check SG and NACL ports are open or not.
5)check Load balance targets are healthy or not
6)check DNS name resolution working or not.

--------------------------------------------------------------------CLASS-9 END----------------------------------------------------------------------------
Today's plan: Class-13
------------
1)AWS EC2
      -EC2 instances
      -AMI and inspector
      -EBS volumes
      -Network LoadBalancer
      -Application LoadBalancer
      -AutoScaling Groups
      -AWS Route53 introduction
      -AWS certificate Manager(ACM)
      
--> AWS instance types
--> Placement groups
-->Tenancy












































